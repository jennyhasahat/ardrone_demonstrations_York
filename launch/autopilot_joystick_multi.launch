<launch>
	<!--ROS driver for joystick-->
	<node name="joy_node" pkg="joy" type="joy_node" clear_params="true">
		<param name="dev" type="str" value="/dev/input/js0" />
	</node>
	<!-- Launches the joystick to ardrone remapping -->
	<node name="joystick_controller" pkg="demonstrations" type="joystick2TUMARDroneInterpreter.py" required="true">
		<!-- Configures the joystick button mapping -->
		<param name="ButtonEmergency"		value="11" /> <!--2=top of stick numbered 3, 11=button 12-->
		<param name="ButtonLand"		value="10" /> <!--1=thumb button numbered 2, 10=button 11-->
		<param name="ButtonTakeoff"		value="0" /> <!--trigger-->

		<!-- Configures the joystick axis mapping -->
		<param name="AxisRoll"			value="0" />
		<param name="AxisPitch"			value="1" />
		<param name="AxisYaw"			value="2" />
		<param name="AxisZ"			value="5" /> <!--5 = joystick-like button on top. 3 = +/- flipper at front-->

		<!-- Configures the joystick mapping. Joystick axe readings are divided by these numbers-->
		<param name="ScaleRoll"			value="5" />
		<param name="ScalePitch"		value="5" />
		<param name="ScaleYaw"			value="2" />
		<param name="ScaleZ"			value="1.5" />
	</node>
	
	<include file="$(find demonstrations)/launch/ta_64.xml" />
	<node name="state_estimation" pkg="tum_ardrone" type="drone_stateestimation" />
	<node name="drone_autopilot" pkg="tum_ardrone" type="drone_autopilot" />
	
	<group ns="follower1">
		<include file="$(find demonstrations)/launch/ta_66.xml" />
		
		<node name="state_estimation" pkg="tum_ardrone" type="drone_stateestimation" />
		<node name="drone_autopilot" pkg="tum_ardrone" type="drone_autopilot" output="screen"/>
		<node name="echo" pkg="demonstrations" type="echoTUMCommands.py" />
	</group>
</launch>


